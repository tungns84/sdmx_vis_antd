import { defineMessages } from 'react-intl';
import { DISPLAY_BOTH, DISPLAY_CODE, DISPLAY_LABEL } from '../utils/constants';

export const toolbarMessages = defineMessages({
  overview: { id: 'de.visualisation.toolbar.overview' },
  table: { id: 'de.visualisation.toolbar.table' },
  microdata: { id: 'de.visualisation.toolbar.microdata' },
  chart: { id: 'de.visualisation.toolbar.chart' },
  customize: { id: 'de.visualisation.toolbar.action.customize' },
  layout: { id: 'de.visualisation.toolbar.action.layout' },
  share: { id: 'de.visualisation.toolbar.action.share' },
  apiqueries: { id: 'de.visualisation.toolbar.action.apiqueries' },
  fullscreen: { id: 'de.visualisation.toolbar.action.fullscreen' },
  download: { id: 'de.visualisation.toolbar.action.download' },
  labels: { id: 'de.visualisation.toolbar.action.labels' },
});

export const periodMessages = defineMessages({
  year: { id: 'de.period.year' },
  semester: { id: 'de.period.semester' },
  quarter: { id: 'de.period.quarter' },
  month: { id: 'de.period.month' },
  week: { id: 'de.period.week' },
  hour: { id: 'de.period.hour' },
  minute: { id: 'de.period.minute' },
  full_hour: { id: 'de.period.full_hour' },
  day: { id: 'de.period.day' },
  end: { id: 'de.period.end' },
  start: { id: 'de.period.start' },
});

export const guidancesMessages = defineMessages({
  chart: { id: 'viewer.guidances.chart' },
  table: { id: 'viewer.guidances.table' },
  bar: { id: 'viewer.guidance.bar' },
  row: { id: 'viewer.guidance.row' },
  scatter: { id: 'viewer.guidance.scatter' },
  hsymbol: { id: 'viewer.guidance.hsymbol' },
  vsymbol: { id: 'viewer.guidance.vsymbol' },
  timeline: { id: 'viewer.guidance.timeline' },
  stackedBar: { id: 'viewer.guidance.stacked-bar' },
  stackedRow: { id: 'viewer.guidance.stacked-row' },
  choro: { id: 'viewer.guidance.choro' },
});

export const apiQueriesMessages = defineMessages({
  copy: { id: 'de.api.queries.copy' },
  copied: { id: 'de.api.queries.copied' },
  flatFormat: { id: 'de.api.queries.format.flat' },
  timeSeries: { id: 'de.api.queries.format.time.series' },
  dataTitle: { id: 'de.api.queries.label.data' },
  structureTitle: { id: 'de.api.queries.label.structure' },
  dataUrlTooLong: { id: 'de.api.queries.error.data.long.url' },
});

export const visDlMessages = defineMessages({
  'data.download.csv.all': {
    id: 'de.visualisation.toolbar.action.download.csv.all',
  },
  'data.download.csv.selection': {
    id: 'de.visualisation.toolbar.action.download.csv.selection',
  },
  'excel.selection': {
    id: 'de.visualisation.toolbar.action.download.excel.selection',
  },
  'chart.selection': {
    id: 'de.visualisation.toolbar.action.download.chart.selection',
  },
  'microdata.download.excel.selection': {
    id: 'microdata.download.excel.selection',
  },
  'microdata.download.csv.selection': {
    id: 'microdata.download.csv.selection',
  },
  'microdata.download.csv.all': { id: 'microdata.download.csv.all' },
  'metadata.download.csv.all': { id: 'metadata.download.csv.all' },
});

export default defineMessages({
  asc: { id: 'de.table.layout.time.asc' },
  desc: { id: 'de.table.layout.time.desc' },
  start: { id: 'wcag.table.layout.start' },
  update: { id: 'wcag.table.layout.update' },
  end: { id: 'wcag.table.layout.end' },
  cancel: { id: 'wcag.table.layout.cancel' },
  explanation: { id: 'wcag.table.layout.explanation' },
  row: { id: 'de.table.layout.x' },
  column: { id: 'de.table.layout.y' },
  section: { id: 'de.table.layout.z' },
  apply: { id: 'de.table.layout.apply' },
  cancelChanges: { id: 'de.table.layout.cancel' },
  submit: { id: 'share.action' },
  focus: { id: 'chart.config.focus' },
  highlight: { id: 'chart.config.highlights' },
  select: { id: 'chart.config.select' },
  baseline: { id: 'chart.config.baseline' },
  size: { id: 'chart.config.size' },
  width: { id: 'chart.config.width' },
  height: { id: 'chart.config.height' },
  display: { id: 'de.table.layout.getter.dimension' },
  [DISPLAY_LABEL]: { id: 'vx.config.display.label' },
  [DISPLAY_CODE]: { id: 'vx.config.display.code' },
  [DISPLAY_BOTH]: { id: 'vx.config.display.both' },
  series: { id: 'chart.config.series' },
  scatterDimension: { id: 'chart.config.dimension.x.y.axes' },
  scatterX: { id: 'chart.config.dimension.values.x.axis' },
  scatterY: { id: 'chart.config.dimension.values.y.axis' },
  symbolDimension: { id: 'chart.config.dimension.for.symbols' },
  stackedDimension: { id: 'chart.config.dimension.x.axis' },
  stackedMode: { id: 'chart.config.observations.displayed' },
  values: { id: 'chart.config.stacked.values' },
  percent: { id: 'chart.config.stacked.percent' },
  axisX: { id: 'chart.config.x.axis' },
  axisY: { id: 'chart.config.y.axis' },
  max: { id: 'chart.config.maximum' },
  min: { id: 'chart.config.minimum' },
  pivot: { id: 'chart.config.pivot' },
  step: { id: 'chart.config.step' },
  frequency: { id: 'chart.config.frequency' },
  freqStep: { id: 'chart.config.step.period' },
  configTitle: { id: 'vx.config.title' },
  subtitle: { id: 'vx.config.subtitle' },
  source: { id: 'vx.config.source' },
  logo: { id: 'vx.config.logo' },
  copyright: { id: 'vx.config.copyright' },
  reset: { id: 'vx.config.reset' },
  uniqFocusOption: { id: 'vx.config.uniq.focus.option' },
  last: { id: 'de.filter.period.title.last' },
  head: { id: 'de.filter.period.title.head' },
  beforeLabel: { id: 'de.period.last' },
  afterLabel: { id: 'de.period.periods' },
  periodsPopperLabel: { id: 'de.period.helpLastNPeriods' },
  timeValuesPopperLabel: { id: 'de.period.helpLastNTimeValues' },
  next: { id: 'wcag.scopelist.navigate.next' },
  backHelper: { id: 'wcag.scopelist.navigate.backHelper' },
  childrenNavigateDesc: { id: 'wcag.scopelist.navigate.children' },
  selectionTitle: { id: 'scopelist.selection.title' },
  selectionCurrent: { id: 'scopelist.selection.current' },
  selectionLevel: { id: 'scopelist.selection.level' },
  placeholder: { id: 'vx.spotlight.placeholder' },
  primary: { id: 'vx.spotlight.placeholder.primary' },
  secondary: { id: 'vx.spotlight.placeholder.secondary' },
  pinned: { id: 'wcag.pinned' },
  title: { id: 'vx.filters.current.title' },
  titleLabel: { id: 'wcag.filters.current.title' },
  clear: { id: 'vx.filters.current.clear' },
  reducingChip: { id: 'used.filters.reducing' },
  periodStart: { id: 'de.period.start' },
  periodEnd: { id: 'de.period.end' },
  periodLast: { id: 'de.period.last' },
  periods: { id: 'de.period.periods' },
  viewerLink: { id: 'de.viewer.copyright.content.link' },
  viewerLinkLabel: { id: 'de.viewer.copyright.content.link.label' },
  footerCopyright: { id: 'de.viewer.copyright.label' },
  '/': { id: 'de.app.title.search' },
  '/vis': { id: 'de.app.title.vis' },
  sharePolicyLink: { id: 'share.policy.link' },
  userLogin: { id: 'user.login' },
  userLogout: { id: 'user.logout' },
  accessibilityDisable: { id: 'accessibility.disable' },
  accessibilitySupport: { id: 'accessibility.support' },
  accessibilitySupportEnabled: { id: 'accessibility.support.enabled' },
  accessibilitySupportDisabled: { id: 'accessibility.support.disabled' },
  incompleteExcelData: { id: 'incomplete.excel.data' },
  microdataTitle: { id: 'microdata.title' },
  sharePrivateData: { id: 'de.sharing.private.data' },
  advancedAttrs: { id: 'metadata.advanced.attributes' },
  metadataCollapse: { id: 'metadata.collapse.all' },
  metadataExpand: { id: 'metadata.expand.all' },
  metadataNoValue: { id: 'metadata.no.value' },
  metadataEmpty: { id: 'metadata.empty' },
  dataTrue: { id: 'sdmx.data.true' },
  dataFalse: { id: 'sdmx.data.false' },
  tableCellsLimit: { id: 'incomplete.table.cells.limit' },
  visDataLimit: { id: 'incomplete.vis.data.total.limit' },
  goHome: { id: 'de.appBar.go.home' },
  disableItemLabel: { id: 'de.vis.disabled.item.label' },
  singleSelection: { id: 'vx.filter.single.selection' },
  childrenSelection: { id: 'vx.filter.children.selection' },
  branchSelection: { id: 'vx.filter.branch.selection' },
  levelSelection: { id: 'vx.filter.level.selection' },
  selectAll: { id: 'vx.filter.all.selection' },
  deselectAll: { id: 'vx.filter.deselect.all' },
  colapseAll: { id: 'vx.filter.colapse.all' },
  expandAll: { id: 'vx.filter.expand.all' },
  applyFilter: { id: 'vx.filter.apply' },
  closeFilter: { id: 'vx.filter.close' },
  filterSelectionMode: { id: 'vx.filter.selectin.mode' },
  filterSelectionHint: { id: 'vx.filter.selectin.hint' },
  moreFilters: { id: 'de.results.more.filters' },
  timeSeries: { id: 'de.time.series.values' },
  advancedFilter: { id: 'de.advanced.filter' },
  subject: { id: 'de.share.subject' },
  headerMsg: { id: 'de.share.headerMsg' },
  subHeaderMsg: { id: 'de.share.subHeaderMsg' },
  copyMsg: { id: 'de.share.copyMsg' },
  confirmationText: { id: 'de.share.confirmationText' },
  buttonMsg: { id: 'de.share.email.button.label' },
  dataPoints: { id: 'de.vis.data.points' },
  help: { id: 'wcag.filters.search.help' },
  viewerContentLabel: { id: 'de.viewer.copyright.content.label' },
  tagLabel: { id: 'wcag.filters.tag.label' },
  chipTooltip: { id: 'wcag.applied.filetrs.chip.tooltip' },
  dataAvailability: { id: 'de.panel.contentConstraints.title' },
  lastNLabel: { id: 'wcag.last.n.label' },
  generateUrl: { id: 'de.sus.button.label' },
  susTitle: { id: 'de.sus.title' },
  layoutAttributes: { id: 'de.table.layout.attributes' },
  activateLayoutAttributes: { id: 'de.table.activate.layout.attributes' },
  tableObsValue: { id: 'de.table.obs.value' },
  logError: { id: 'log.error.sdmx.xxx' },
  availabilityDisabled: { id: 'vis.data.availability.disabled' },
  logoSiscc: { id: 'wcag.logo.siscc.alt.text' },
  logoDe: { id: 'wcag.logo.app.alt.text' },
  deSearchFreeTextList: { id: 'de.search.list.status.freetext' },
  filterTitle: { id: 'de.vis.filter.title' },
  pitFilterTitle: { id: 'de.vis.pit.filter.title' },
  pitFilterLiveValue: { id: 'de.vis.pit.filter.live.value' },
  pitFilterPiTValue: { id: 'de.vis.pit.filter.pit.value' },
});
